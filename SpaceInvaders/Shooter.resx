<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gocEywo1cM+0gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANASURBVFhH
        vZdJyE5hGIZ/82xhzBg2MrMksmKhiGReCiFzFtZWho0slBULWcmKhSIZMsRGkiwoEZEoMmS8ruM8f+93
        vnPO98fPXVe9w3Pu5/3OeaevraBJ8BQOZrXOlZ56m6NSY+EsbM5qnSs99TZHrXpB19/FTpWeeteqO0yG
        oVmtXt3AWLHcSnoaa45KTYHH0GoOmHA7PMux3GoQeuptjkoNAwOXZrVqLYN38DPHsm110lNvc/yVNLgO
        kTyw7a/N+8FKmJHVyrUBfkBxALbZVyU99TZHpabDKzia1cq1Dh7CF4jklm2zr0p66m2OSrV6A7E8R8Fi
        2JqzBEaDqlrCHXoDrbQedsNE6GNDLsu27QFj/liz4BhsgzSBGgCXwVfu0rsCZ3Is22afMcam0ktPvc1R
        qkFwETT5DMXvOQ1eQHx3+ZaTtr0EY1Pppaf95jBXk/yOnyCMzkNfCK2Br2Cfk+4kOA/EckxKB7QWQnro
        Fb7mMFeTDkAEia/U7xo6BNFnQo175li2LfoPQ0iP+DyBuRrkIXEO0iB/7SJQvSH6fZX+ahMfz7FsW7xm
        f7HPKD3izQV6NRxMGjiDnUD34C6chpmgRsAD8OH3MBeGwKMcy7bZZ4yxI0HpcQpuwB24ADvBnE1y1E6Q
        gdDFhlxOqtdQHICbjxQHYGxxIrr+9e2R1QpyD98CHijzYQG4rcoc2AXxejsyAGN9xmc3wiZYCHovB5dk
        w7nhNcnl47f6AB/Bvd26punqsD4PBkMMwLJtMQDxGet66GVdb1eJuRquZs7U5xAP16Ghy8xP5LcUy7YV
        J1sV5kpXWNt4eAJlwWVcgnEQsmxbWWwZ5jJnu4bDfSgLrsIZvT/HcllMFeYyZ7v6Q+zz/wNzmbNdHqEn
        IA1ywrj77YC9cAvS/jqM9Rmf1UOvtN9cTce2F8s0yA0pvR1PhWvwHeIQKmKfMcaG9NAr9TZXk7yppCvh
        CKSbkXLirIBVFdjXMLmQHnqFrzlKb0W+kn3wBm5C3fXZK7i7ZkrdtVwvPfU2R9WtKTsg3LvHZLVqrYar
        4EVELNtWJz31bvnvqCOaDW8hXqtl2/6bPFC85cYALJceMv9SE+B2juU/UFvbLyKqZM4xHupcAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>